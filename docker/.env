##################################################################
# These variables are passed to Docker Compose to change how the #
# `docker-compose.yml` file is interpreted.                      #
##################################################################

# Default project name. Can also change this using the
# docker-compose `-p, --project-name NAME` option.
COMPOSE_PROJECT_NAME=mayan

# Default profiles.
COMPOSE_PROFILES=all_in_one,postgresql,rabbitmq,redis

# User alternate Mayan EDMS Docker image or tag.
# MAYAN_DOCKER_IMAGE_NAME=mayanedms/mayanedms
# MAYAN_DOCKER_IMAGE_TAG=s4.2


# Modify this to your database server if not using the database deployed
# by the Docker Compose file.
# MAYAN_DATABASE_HOST=

# Security. Change these before the first run.
# Once these are set do not change them here. If you wish to change the
# passwords or usernames after the installation has completed, follow the
# documentation of each component individually and then update the password
# or username in this file. _PASSWORD_START_MARKER
# MAYAN_DATABASE_NAME=
# MAYAN_DATABASE_PASSWORD=
# MAYAN_DATABASE_USER=
# MAYAN_ELASTICSEARCH_PASSWORD=
# MAYAN_RABBITMQ_USER=
# MAYAN_RABBITMQ_PASSWORD=
# MAYAN_RABBITMQ_VHOST=
# MAYAN_REDIS_PASSWORD=

# Traefik

# Enable to use production Let's Encrypt server.
# MAYAN_TRAEFIK_LETS_ENCRYPT_SERVER=https://acme-v02.api.letsencrypt.org/directory

# Enable to launch the Let's Encrypt TLS challenge.
# MAYAN_TRAEFIK_LETS_ENCRYPT_TLS_CHALLENGE=true

# Enable to activate the Traefik UI.
# MAYAN_TRAEFIK_API_INSECURE=true

# Configure the administrative email for the domain.
MAYAN_TRAEFIK_LETS_ENCRYPT_EMAIL=
MAYAN_TRAEFIK_EXTERNAL_DOMAIN=

# Expose the RabbitMQ administrative interface.
MAYAN_TRAEFIK_RABBITMQ_ENABLE=false

# Change if you use external services.
MAYAN_DOCKER_WAIT="postgresql:5432 rabbitmq:5672 redis:6379"

# To prevent CSRF Token mismatch errors when running behind a reverse proxy, you may add your HTTPS endpoint as a trusted origin. 
# MAYAN_CSRF_TRUSTED_ORIGINS=['https://staging.mayan.cloud']


#########################################################
# These variables are passed to the running containers. #
# They are interpreted by Mayan EDMS.                   #
#########################################################

# To use block storage.
# MAYAN_PIP_INSTALLS="django-storages==1.10 boto3==1.14.58"
# MAYAN_DOCUMENTS_STORAGE_BACKEND="storages.backends.s3boto3.S3Boto3Storage"
# MAYAN_DOCUMENTS_STORAGE_BACKEND_ARGUMENTS="{'access_key':'<access key>','secret_key':'<secret key>','bucket_name':'mayan','endpoint_url':'http://<URL:port>','verify':'False'}"  # 'verify':'False' for local servers with self signed SSL certificate

# To add Debian package, like LDAP.
# MAYAN_APT_INSTALLS="<Debian package names>"

# To add operating system packages, like additional OCR language,
# packages, put then in the variable below.
# MAYAN_APT_INSTALLS="tesseract-ocr-deu tesseract-ocr-nld"

# To use LDAP authentication.
# Create a folder named `user_settings` in the `media` folder.
# Copy the file `contrib/settings/ldap_connection_settings.py` from the online
# repository and place in the new `user_settings` folder.
# Edit the `user_settings/ldap_connection_settings' file to work with your
# LDAP server.
# Example: https://django-auth-ldap.readthedocs.io/en/latest/example.html
# Restart the stack and test.
